<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/util 
					    http://www.springframework.org/schema/util/spring-util-3.0.xsd
					    http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.myspringmvc" ></context:component-scan>
	<context:annotation-config/>
	<mvc:annotation-driven/>
	
	
	
	
	
	<!-- 自动扫描 -->
	<!-- <context:component-scan base-package="com.springmvc/**/service" /> -->
	<!-- <context:component-scan base-package="com.springmvc" /> -->
	<!-- <context:component-scan base-package="com.myspringmvc" ></context:component-scan>  -->
    <!--<context:component-scan base-package="com.snaillove.common.service" />-->
    
    <!-- Junit 测试是否正确引入spring配置文件 -->
    <!-- <bean id="currentDate" class="java.util.Date"></bean> -->
    
    	
    
	<!-- 引入配置文件 -->
    <!--<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>-->
	<!-- 配置数据源 -->
    <!--<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/learn" />
		<property name="username" value="root" />
		<property name="password" value="111111" />
	</bean> -->
	
	


	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		自动扫描mapping.xml文件
		<property name="mapperLocations" value="classpath:mappings/**/*.xml"></property>
		就算不引入mybatis-config文件也可以正常启动程序了
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<property name="configLocation" value="classpath*:conf/mybatis-config.xml"></property>
	</bean> 
	
	DAO接口所在包名，Spring会自动查找其下的类
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.springmvc/**/dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> -->
	
	
	  <!-- 使用注解注入properties中的值 -->
<!-- 	  <bean id="config"
	     class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <property name="locations">
	      <list>
	        <value>classpath:sysConf.properties</value>
	      </list>
	    </property>
	    设置编码格式
	    <property name="fileEncoding" value="UTF-8"></property>
	  </bean> -->
  	
	
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
<!-- 	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceDev" />
	</bean> -->
</beans>